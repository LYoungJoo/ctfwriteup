# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: letsenchiffre.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='letsenchiffre.proto',
  package='letsenchiffre',
  serialized_pb=_b('\n\x13letsenchiffre.proto\x12\rletsenchiffre\"\x85\x01\n\x12\x43\x65rtificateRequest\x12\x10\n\x08Locality\x18\x01 \x02(\t\x12\r\n\x05State\x18\x02 \x02(\t\x12\x0c\n\x04\x43ity\x18\x03 \x02(\t\x12\x0f\n\x07\x43ompany\x18\x04 \x02(\t\x12\x12\n\nCommonName\x18\x05 \x02(\t\x12\x1b\n\x13\x43\x65rtificatePassword\x18\x06 \x02(\t\"[\n\x13\x43\x65rtificateResponse\x12\x13\n\x0b\x43\x65rtificate\x18\x01 \x02(\t\x12\x12\n\nPrivateKey\x18\x02 \x02(\t\x12\x1b\n\x13\x43\x65rtificatePassword\x18\x03 \x02(\t\"x\n\x13LetsEnchiffrePaquet\x12/\n\x04\x43Req\x18\x01 \x01(\x0b\x32!.letsenchiffre.CertificateRequest\x12\x30\n\x04\x43Res\x18\x02 \x01(\x0b\x32\".letsenchiffre.CertificateResponse')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CERTIFICATEREQUEST = _descriptor.Descriptor(
  name='CertificateRequest',
  full_name='letsenchiffre.CertificateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Locality', full_name='letsenchiffre.CertificateRequest.Locality', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='State', full_name='letsenchiffre.CertificateRequest.State', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='City', full_name='letsenchiffre.CertificateRequest.City', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Company', full_name='letsenchiffre.CertificateRequest.Company', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CommonName', full_name='letsenchiffre.CertificateRequest.CommonName', index=4,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CertificatePassword', full_name='letsenchiffre.CertificateRequest.CertificatePassword', index=5,
      number=6, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=172,
)


_CERTIFICATERESPONSE = _descriptor.Descriptor(
  name='CertificateResponse',
  full_name='letsenchiffre.CertificateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Certificate', full_name='letsenchiffre.CertificateResponse.Certificate', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='PrivateKey', full_name='letsenchiffre.CertificateResponse.PrivateKey', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CertificatePassword', full_name='letsenchiffre.CertificateResponse.CertificatePassword', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=265,
)


_LETSENCHIFFREPAQUET = _descriptor.Descriptor(
  name='LetsEnchiffrePaquet',
  full_name='letsenchiffre.LetsEnchiffrePaquet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='CReq', full_name='letsenchiffre.LetsEnchiffrePaquet.CReq', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='CRes', full_name='letsenchiffre.LetsEnchiffrePaquet.CRes', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=267,
  serialized_end=387,
)

_LETSENCHIFFREPAQUET.fields_by_name['CReq'].message_type = _CERTIFICATEREQUEST
_LETSENCHIFFREPAQUET.fields_by_name['CRes'].message_type = _CERTIFICATERESPONSE
DESCRIPTOR.message_types_by_name['CertificateRequest'] = _CERTIFICATEREQUEST
DESCRIPTOR.message_types_by_name['CertificateResponse'] = _CERTIFICATERESPONSE
DESCRIPTOR.message_types_by_name['LetsEnchiffrePaquet'] = _LETSENCHIFFREPAQUET

CertificateRequest = _reflection.GeneratedProtocolMessageType('CertificateRequest', (_message.Message,), dict(
  DESCRIPTOR = _CERTIFICATEREQUEST,
  __module__ = 'letsenchiffre_pb2'
  # @@protoc_insertion_point(class_scope:letsenchiffre.CertificateRequest)
  ))
_sym_db.RegisterMessage(CertificateRequest)

CertificateResponse = _reflection.GeneratedProtocolMessageType('CertificateResponse', (_message.Message,), dict(
  DESCRIPTOR = _CERTIFICATERESPONSE,
  __module__ = 'letsenchiffre_pb2'
  # @@protoc_insertion_point(class_scope:letsenchiffre.CertificateResponse)
  ))
_sym_db.RegisterMessage(CertificateResponse)

LetsEnchiffrePaquet = _reflection.GeneratedProtocolMessageType('LetsEnchiffrePaquet', (_message.Message,), dict(
  DESCRIPTOR = _LETSENCHIFFREPAQUET,
  __module__ = 'letsenchiffre_pb2'
  # @@protoc_insertion_point(class_scope:letsenchiffre.LetsEnchiffrePaquet)
  ))
_sym_db.RegisterMessage(LetsEnchiffrePaquet)


# @@protoc_insertion_point(module_scope)
